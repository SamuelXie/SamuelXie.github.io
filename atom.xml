<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blessing</title>
  <subtitle>眼角凝固着寒冬黑色的风，包裹着寂寞拖延时间褪色。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://poino.cn/"/>
  <updated>2016-04-23T04:29:53.000Z</updated>
  <id>http://poino.cn/</id>
  
  <author>
    <name>Samuel Xie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS应用启动顺序</title>
    <link href="http://poino.cn/2016/04/09/iOS%E5%BA%94%E7%94%A8%E5%90%AF%E5%8A%A8%E9%A1%BA%E5%BA%8F/"/>
    <id>http://poino.cn/2016/04/09/iOS应用启动顺序/</id>
    <published>2016-04-09T11:26:32.000Z</published>
    <updated>2016-04-23T04:29:53.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;文章简单介绍了iOS应用的启动顺序，知道内部原理对程序的理解非常重要。因为本篇英文比较简单，故没有进行翻译，希望大家能在看完本文后有所收获。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;/assets/blogImg/ios-4-app-launch-flow.png&quot; alt=&quot;Launch Sequence&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Launch-Sequence&quot;&gt;&lt;a href=&quot;#Launch-Sequence&quot; class=&quot;headerlink&quot; title=&quot;Launch Sequence&quot;&gt;&lt;/a&gt;Launch Sequence&lt;/h1&gt;&lt;p&gt;1、 First, the function creates the main application object (step 3 in the flowchart). If you specify nil as the third argument to UIApplicationMain() (the default), it will create an instance of UIApplication in this step. This is usually what you want. However, if you need to subclass UIApplication (for example, to override its event handling in sendEvent:), you have to pass a string with the name of your subclass to UIApplicationMain().&lt;br&gt;2、 The function then looks at its fourth argument. If it is non-nil, it interprets it as the name of the class for the application delegate, instantiates an object of this class and assigns it as the application object’s delegate. The default for the fourth argument is nil, though, which signifies that the app delegate will be created in the main NIB file.&lt;br&gt;3、 Next, UIApplicationMain() loads and parses your app’s Info.plist (step 4). If it contains a key named “Main nib file base name” (NSMainNibFile), the function will also load the NIB file specified there (step 5).&lt;br&gt;4、 By default, the main NIB file is called MainWindow.nib. It contains at least an object representing the application delegate, connected to the File’s Owner’s delegate outlet (step 6), and a UIWindow object that will be used as the app’s main window, connected to an outlet of the app delegate. If you used a view-controller-based app template, the NIB file will also contain your app’s root view controller and possibly one or more view child controllers.&lt;br&gt;It is worth mentioning that this is the only step where the UIKit-based app templates (Window-based, View-based, Navigation-based, Tab-based, etc.) differ significantly from each other. If you started out with a view-based app and later want to introduce a navigation controller, there is no need to start a new project: simply replace the root view controller in the main NIB file and adjust one or two lines of code in the app delegate. I noticed that many newbies to the iOS platform struggle with this problem and assume a huge difference between the different project templates. There isn’t.&lt;br&gt;5、 Now, UIApplicationMain() creates the application’s run loop that is used by the UIApplication instance to process events such as touches or network events (step 7). The run loop is basically an infinite loop that causes UIApplicationMain() to never return.&lt;br&gt;6、 Before the application object processes the first event, it finally sends the well-known application:didFinishLaunchingWithOptions: message to its delegate, giving us the chance to do our own setup (step 8). The least we have to do here is put our main window on the screen by sending it a makeKeyAndVisible message.&lt;/p&gt;
&lt;h1 id=&quot;Entry-points&quot;&gt;&lt;a href=&quot;#Entry-points&quot; class=&quot;headerlink&quot; title=&quot;Entry points&quot;&gt;&lt;/a&gt;Entry points&lt;/h1&gt;&lt;p&gt;You see, there is no magic here. Besides application:didFinishLaunchingWithOptions:, there are several more entry points for custom code during the launch sequence (none of which are usually needed):&lt;/p&gt;
&lt;p&gt;Directly in main() before UIApplicationMain() is called.&lt;br&gt;The init method of a custom UIApplication subclass.&lt;br&gt;The initWithCoder: or awakeFromNib methods of our application delegate if it is created from a NIB file (the default).&lt;br&gt;The + initialize methods of our application delegate class or a custom UIApplication subclass. Any class receives an + initialize message before it is sent its first message from within the program.&lt;/p&gt;
&lt;p&gt;Note that this sequence only happens at the actual launch of an app. If the app is already running and simply brought back from the background, none of this occurs.&lt;/p&gt;
&lt;h1 id=&quot;在中国都说要走“三步”，我也整理了一下具有中国特色的启动顺序：&quot;&gt;&lt;a href=&quot;#在中国都说要走“三步”，我也整理了一下具有中国特色的启动顺序：&quot; class=&quot;headerlink&quot; title=&quot;在中国都说要走“三步”，我也整理了一下具有中国特色的启动顺序：&quot;&gt;&lt;/a&gt;在中国都说要走“三步”，我也整理了一下具有中国特色的启动顺序：&lt;/h1&gt;&lt;h2 id=&quot;第一步&quot;&gt;&lt;a href=&quot;#第一步&quot; class=&quot;headerlink&quot; title=&quot;第一步&quot;&gt;&lt;/a&gt;第一步&lt;/h2&gt;&lt;p&gt;&lt;code&gt;UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));&lt;/code&gt;&lt;br&gt;&lt;code&gt;UIApplicationMain&lt;/code&gt;函数中一共有四个参数，第一个第二个没什么变化，跟C类大多数语言相同，传参用。第三个第四个则是UIKit中的内容了。通过苹果官方文档的说法，&lt;code&gt;第三个参数是NSString * __nullable principalClassName，nil创建默认UIApplication实例&lt;/code&gt;，也可以通过传入继承UIApplication的子类来重写相应链的处理方式。&lt;code&gt;第四个参数指定加载的AppDelegate的类，若为nil，则从main.nib中加载&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;第二步&quot;&gt;&lt;a href=&quot;#第二步&quot; class=&quot;headerlink&quot; title=&quot;第二步&quot;&gt;&lt;/a&gt;第二步&lt;/h2&gt;&lt;p&gt;加载&lt;code&gt;info.plist&lt;/code&gt;文件，有一个value为main的record，这个是改initial视图的，删掉该字段就可以愉快的用代码在&lt;code&gt;AppDelegate&lt;/code&gt;中编程了:)&lt;/p&gt;
&lt;h2 id=&quot;第三步&quot;&gt;&lt;a href=&quot;#第三步&quot; class=&quot;headerlink&quot; title=&quot;第三步&quot;&gt;&lt;/a&gt;第三步&lt;/h2&gt;&lt;p&gt;通过&lt;code&gt;UIApplication&lt;/code&gt;实例创建&lt;code&gt;RunLoop&lt;/code&gt;，用来处理touches或network一类的响应事件。&lt;br&gt;在这些都做好后，发送消息&lt;code&gt;application:didFinishLaunchingWithOptions:&lt;/code&gt;给你&lt;code&gt;自己写的AppDelegate&lt;/code&gt;，then enjoy:)&lt;/p&gt;
&lt;p&gt;另外，这个launch sequence只是在应用初次启动时的顺序，如果程序已经运行或从挂起放到前台，不会走这个顺序。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;文章简单介绍了iOS应用的启动顺序，知道内部原理对程序的理解非常重要。因为本篇英文比较简单，故没有进行翻译，希望大家能在看完本文后有所收获。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Foundation" scheme="http://poino.cn/categories/Foundation/"/>
    
    
      <category term="iOS基础" scheme="http://poino.cn/tags/iOS%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>UIScrollView原理</title>
    <link href="http://poino.cn/2016/04/03/UIScrollView%E5%8E%9F%E7%90%86/"/>
    <id>http://poino.cn/2016/04/03/UIScrollView原理/</id>
    <published>2016-04-03T12:00:45.000Z</published>
    <updated>2016-04-03T12:09:45.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;大体介绍了UIScrollView中常见的属性和方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在滚动过程当中,其实是在修改原点坐标&lt;/p&gt;
&lt;p&gt;当手指触摸后, scroll view会暂时拦截触摸事件,使用一个&lt;br&gt;计时器,假如在计时器到点后,没有发生手指移动事件,&lt;br&gt;那么,scroll view发送tracking events到被点击的subview&lt;br&gt;假如在计时器到点前,发生了移动事件,那么 scroll view 取消tracking&lt;br&gt;自己发生滚动&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;子类可以重载&lt;code&gt;touchesShouldBegin:withEvent:inContentView:&lt;/code&gt;决定自己是否接收touch事件&lt;br&gt;&lt;code&gt;pagingEnabled&lt;/code&gt;当值是YES,会自动滚动到subview的边界,默认是NO&lt;br&gt;&lt;code&gt;touchesShouldCancelInContentView:&lt;/code&gt;开始发送tracking messages消息给subview的时候&lt;br&gt;调用这个方法,决定是否发送tracking messages消息到subview,假如返回NO,发送,YES则不发送&lt;br&gt;假如 &lt;code&gt;canCancelContentTouches&lt;/code&gt;属性是NO,则不调用这个方法&lt;br&gt;来影响如何处理滚动手势&lt;/p&gt;
&lt;p&gt;scroll view还处理缩放和平移手势&lt;br&gt;要实现缩放和平移,必须实现委托&lt;code&gt;viewForZoomingInScrollView:&lt;/code&gt;&lt;br&gt;&lt;code&gt;scrollViewDidEndZooming:withView:atScale:&lt;/code&gt;&lt;br&gt;两个方法,另外 &lt;code&gt;maximumZoomScale&lt;/code&gt;和&lt;code&gt;minimumZoomScale&lt;/code&gt;两个属性要不一样 &lt;/p&gt;
&lt;p&gt;几个属性&lt;br&gt;&lt;code&gt;tracking&lt;/code&gt;&lt;br&gt;当touch后还没有拖动的时候,值是YES,否则NO&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zoomBouncing&lt;/code&gt;&lt;br&gt;当内容放大到最大或者最小的时候,值是YES,否则NO&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zooming&lt;/code&gt;&lt;br&gt;当正在缩放的时候,值是YES,否则NO&lt;/p&gt;
&lt;p&gt;&lt;code&gt;decelerating&lt;/code&gt;&lt;br&gt;当滚动后,手指放开,但是还在继续滚动中,这个时候是 YES,其他是NO&lt;/p&gt;
&lt;p&gt;&lt;code&gt;decelerationRate&lt;/code&gt;&lt;br&gt;设置手指放开后的减速率&lt;/p&gt;
&lt;p&gt;&lt;code&gt;maximumZoomScale&lt;/code&gt;&lt;br&gt;一个浮点数,表示能放最大的倍数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;minimumZoomScale&lt;/code&gt;&lt;br&gt;一个浮点数,表示能缩最小的倍数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pagingEnabled&lt;/code&gt;&lt;br&gt;当值是YES,会自动滚动到subview的边界,默认是NO&lt;/p&gt;
&lt;p&gt;&lt;code&gt;scrollEnabled&lt;/code&gt;&lt;br&gt;决定是否可以滚动&lt;/p&gt;
&lt;p&gt;&lt;code&gt;delaysContentTouches&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;是个布尔值,当值是YES的时候,用户触碰开始,scroll view要延迟一会,看看是否用户有意图滚动,假如滚动了,那么捕捉touch-down事件,否则就不捕捉, 假如值是NO,当用户触碰, scroll view会立即触发touchesShouldBegin:withEvent:inContentView:, 默认是YES&lt;/p&gt;
&lt;p&gt;&lt;code&gt;canCancelContentTouches&lt;/code&gt;&lt;br&gt;当值是YES的时候，用户触碰后，然后在一定时间内没有移动，scrollView发送tracking events，然后用户移动手指足够长度触发滚动事件，这个时候，scrollView发送了touchesCancelled:withEvent: 到subview，然后scroView开始滚动&lt;br&gt;假如值是NO,scrollView发送tracking events后，就算用户移动手指，scrollView也不会滚动&lt;/p&gt;
&lt;p&gt;&lt;code&gt;contentSize&lt;/code&gt;&lt;br&gt;里面内容的大小，也就是可以滚动的大小，默认是0，没有滚动效果。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;showsHorizontalScrollIndicator&lt;/code&gt;&lt;br&gt;滚动时,是否显示水平滚动条&lt;/p&gt;
&lt;p&gt;&lt;code&gt;showsVerticalScrollIndicator&lt;/code&gt;&lt;br&gt;滚动时,是否显示垂直滚动条&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bounces&lt;/code&gt;&lt;br&gt;默认是yes,就是滚动超过边界,会反弹有反弹回来的效果,假如是 NO,那么滚动到达边界,那么会连忙停止&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bouncesZoom&lt;/code&gt;&lt;br&gt;和bounces类似,区别在于,这个效果反映在缩放上面,假如缩放超过最大缩放,那么会反弹效果,假如是NO,则到达最大或者最小的时候,立即停止&lt;/p&gt;
&lt;p&gt;&lt;code&gt;directionalLockEnabled&lt;/code&gt;&lt;br&gt;默认是NO, 可以在垂直和水平方向同时运动, 当值是YES, 假如一开始是垂直或者是水平运动,那么接下来会锁定另外一个方向的滚动, 假如一开始是对角方向滚动,则不会禁止某个方向&lt;/p&gt;
&lt;p&gt;&lt;code&gt;indicatorStyle&lt;/code&gt;&lt;br&gt;滚动条的样式,基本只是设置颜色,总共3个颜色,默认,黑色的,白色的&lt;/p&gt;
&lt;p&gt;&lt;code&gt;scrollIndicatorInsets&lt;/code&gt;&lt;br&gt;设置滚动条的位置&lt;/p&gt;
&lt;p&gt;作者：禚来强 iphone开发&lt;strong&gt;*&lt;/strong&gt;：79190809 邮箱：zhuolaiqiang@gmail.com转帖请保留&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;大体介绍了UIScrollView中常见的属性和方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在滚动过程当中,其实是在修改原点坐标&lt;/p&gt;
&lt;p&gt;当手指触摸后, scroll view会暂时拦截触摸事件,使用一个&lt;br&gt;计时器,假如在计时器到点后,没有发生手指移动事件,&lt;br&gt;那么,scroll view发送tracking events到被点击的subview&lt;br&gt;假如在计时器到点前,发生了移动事件,那么 scroll view 取消tracking&lt;br&gt;自己发生滚动&lt;br&gt;
    
    </summary>
    
      <category term="Objective-C" scheme="http://poino.cn/categories/Objective-C/"/>
    
    
      <category term="iOS" scheme="http://poino.cn/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS 中KVC、KVO、NSNotification、delegate 总结及区别</title>
    <link href="http://poino.cn/2016/03/30/iOS%E4%B8%ADKVC%E3%80%81KVO%E3%80%81NSNotification%E3%80%81delegate%E6%80%BB%E7%BB%93%E5%8F%8A%E5%8C%BA%E5%88%AB/"/>
    <id>http://poino.cn/2016/03/30/iOS中KVC、KVO、NSNotification、delegate总结及区别/</id>
    <published>2016-03-29T16:00:00.000Z</published>
    <updated>2016-04-21T10:04:46.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Samuel在学习完KeyValue机制后，对iOS的应用有了新的认识，在这里写下对KVC的一些看法，才疏学浅，文中难免有纰漏，希望各位大神指正。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;KVC&quot;&gt;&lt;a href=&quot;#KVC&quot; class=&quot;headerlink&quot; title=&quot;KVC&quot;&gt;&lt;/a&gt;KVC&lt;/h1&gt;&lt;p&gt;KVC指的是NSKeyValueCoding，是NSObject的一个Category，可以不通过调用accessor对实例变量进行读取NSObject(NSKeyValueCoding)的方法有三类: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;getting values&lt;/li&gt;
&lt;li&gt;setting values&lt;/li&gt;
&lt;li&gt;validation&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;常见方法&quot;&gt;&lt;a href=&quot;#常见方法&quot; class=&quot;headerlink&quot; title=&quot;常见方法&quot;&gt;&lt;/a&gt;常见方法&lt;/h2&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;getting-values&quot;&gt;&lt;a href=&quot;#getting-values&quot; class=&quot;headerlink&quot; title=&quot;getting values&quot;&gt;&lt;/a&gt;getting values&lt;/h3&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; _Nullable)valueForKey:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * _Nonnull)key&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;值&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;key&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;要取的实例变量名字的字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; _Nullable)valueForKeyPath:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * _Nonnull)keyPath&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;值&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;keyPath&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;取的实例变量，可以用“.”来连接多个嵌套的key&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;setting-values&quot;&gt;&lt;a href=&quot;#setting-values&quot; class=&quot;headerlink&quot; title=&quot;setting values&quot;&gt;&lt;/a&gt;setting values&lt;/h3&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setValue:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; _Nullable)value forKeyPath:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * _Nonnull)keyPath&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;值&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;value&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;要放入的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;keyPath&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;要修改的实例变量位置&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setValue:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; _Nullable)value forKey:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * _Nonnull)key&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;值&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;value&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;要放入的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;key&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;要修改的实例变量位置&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;实例&quot;&gt;&lt;a href=&quot;#实例&quot; class=&quot;headerlink&quot; title=&quot;实例&quot;&gt;&lt;/a&gt;实例&lt;/h2&gt;&lt;p&gt;在main.m中：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int main(int argc, const char * argv[]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @autoreleasepool &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SCTeacher *teacher = [SCTeacher new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SCStudent *student = [SCStudent new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [teacher setStudent:student];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&quot;老师的姓名：%@&quot;, [teacher valueForKey:@&quot;name&quot;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //NSLog(@&quot;老师的年龄：%zd&quot;, [teacher valueForKey:@&quot;age&quot;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //error. this class is not key value coding-compliant for the key age.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&quot;学生的姓名：%@&quot;, [teacher valueForKeyPath:@&quot;student.name&quot;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [teacher setValue:@&quot;阿卡西&quot; forKey:@&quot;name&quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [teacher setValue:@&quot;佐助&quot; forKeyPath:@&quot;student.name”];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&quot;老师的姓名：%@&quot;, [teacher valueForKey:@&quot;name&quot;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&quot;学生的姓名：%@&quot;, [teacher valueForKeyPath:@&quot;student.name&quot;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;打印结果：&lt;br&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-31&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;31.394&lt;/span&gt; KVCDemo[&lt;span class=&quot;number&quot;&gt;1154&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;94182&lt;/span&gt;] 老师的姓名：(null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-31&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;31.395&lt;/span&gt; KVCDemo[&lt;span class=&quot;number&quot;&gt;1154&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;94182&lt;/span&gt;] 学生的姓名：(null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-31&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;31.395&lt;/span&gt; KVCDemo[&lt;span class=&quot;number&quot;&gt;1154&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;94182&lt;/span&gt;] 老师的姓名：阿卡西&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-31&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;31.395&lt;/span&gt; KVCDemo[&lt;span class=&quot;number&quot;&gt;1154&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;94182&lt;/span&gt;] 学生的姓名：佐助&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意：由于返回值为id，所以KVC只能用于pointer对象，这是由于ARC机制所决定的。&lt;/p&gt;
&lt;h1 id=&quot;KVO&quot;&gt;&lt;a href=&quot;#KVO&quot; class=&quot;headerlink&quot; title=&quot;KVO&quot;&gt;&lt;/a&gt;KVO&lt;/h1&gt;&lt;p&gt;KVO指的是NSKeyValueObserving，是NSObject的一个Category，是观察者模式的一种实现，可以在被观察对象被修改时得到通知，执行自己定义的方法。但只能在被观察对象通过KVC被修改时得到通知。&lt;/p&gt;
&lt;h2 id=&quot;使用步骤&quot;&gt;&lt;a href=&quot;#使用步骤&quot; class=&quot;headerlink&quot; title=&quot;使用步骤&quot;&gt;&lt;/a&gt;使用步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;添加监听&lt;/p&gt;
&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)addObserver:(&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt; * _Nonnull)anObserver forKeyPath:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * _Nonnull)keyPath options:(&lt;span class=&quot;built_in&quot;&gt;NSKeyValueObservingOptions&lt;/span&gt;)options context:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; * _Nullable)context&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 其中，NSKeyValueObservingOptions一共有四种&lt;/p&gt;
&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;NSKeyValueObservingOptionNew&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0x01&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//发送新值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;NSKeyValueObservingOptionOld&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0x02&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//发送旧值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;NSKeyValueObservingOptionInitial&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0x04&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//一旦注册，立刻调用一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;built_in&quot;&gt;NSKeyValueObservingOptionPrior&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0x08&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//改变前后分两次调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSKeyValueObservingOptions&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实现observeValueForKeyPath:ofObject:change:context:方法，这个方法当观察的属性变化时会自动调用&lt;/p&gt;
&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)observeValueForKeyPath:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * _Nullable)keyPath ofObject:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; _Nullable)object change:(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *,&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;gt; * _Nullable)change context:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; * _Nullable)context &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     …&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解除注册removeObserver:forKeyPath:context:&lt;/p&gt;
&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)removeObserver:(&lt;span class=&quot;built_in&quot;&gt;NSObject&lt;/span&gt; * _Nonnull)anObserver forKeyPath:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * _Nonnull)keyPath&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;实例-1&quot;&gt;&lt;a href=&quot;#实例-1&quot; class=&quot;headerlink&quot; title=&quot;实例&quot;&gt;&lt;/a&gt;实例&lt;/h2&gt;&lt;p&gt;在main.m中：&lt;br&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * argv[]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;@autoreleasepool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SCTeacher *teacher = [SCTeacher new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SCStudent *student = [SCStudent new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [teacher setValue:&lt;span class=&quot;string&quot;&gt;@&quot;卡卡西&quot;&lt;/span&gt; forKey:&lt;span class=&quot;string&quot;&gt;@&quot;name&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [teacher addObserver:student forKeyPath:&lt;span class=&quot;string&quot;&gt;@&quot;name&quot;&lt;/span&gt; options:&lt;span class=&quot;built_in&quot;&gt;NSKeyValueObservingOptionOld&lt;/span&gt; | &lt;span class=&quot;built_in&quot;&gt;NSKeyValueObservingOptionNew&lt;/span&gt; context:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [teacher setValue:&lt;span class=&quot;string&quot;&gt;@&quot;自来也&quot;&lt;/span&gt; forKey:&lt;span class=&quot;string&quot;&gt;@&quot;name&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [teacher removeObserver:student forKeyPath:&lt;span class=&quot;string&quot;&gt;@&quot;name&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在SCStudent.m中：&lt;br&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SCStudent&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)observeValueForKeyPath:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)keyPath ofObject:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)object change:(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *,&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;gt; *)change context:(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)context &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([keyPath isEqualToString: &lt;span class=&quot;string&quot;&gt;@&quot;name&quot;&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;原来的老师：%@，新的老师是：%@&quot;&lt;/span&gt;, [change valueForKey:&lt;span class=&quot;built_in&quot;&gt;NSKeyValueChangeOldKey&lt;/span&gt;], [change valueForKey:&lt;span class=&quot;built_in&quot;&gt;NSKeyValueChangeNewKey&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; observeValueForKeyPath:keyPath ofObject:object change:change context:context];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;打印结果：&lt;br&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-31&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;27.011&lt;/span&gt; KVCDemo[&lt;span class=&quot;number&quot;&gt;1508&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;159462&lt;/span&gt;] 原来的老师：卡卡西，新的老师是：自来也&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Program ended with exit code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意：addObserver:forKeyPath:options:context: 这是一个主动方法，teacher 说 我要让一个学生知道我的一个值改变了，即观察者是addObserver的对象，解除注册的时候也要teacher 来取消。&lt;/p&gt;
&lt;h1 id=&quot;NSNotification&quot;&gt;&lt;a href=&quot;#NSNotification&quot; class=&quot;headerlink&quot; title=&quot;NSNotification&quot;&gt;&lt;/a&gt;NSNotification&lt;/h1&gt;&lt;p&gt;这是Cocoa Touch中的通知机制，主要有三种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;广播通知&lt;/li&gt;
&lt;li&gt;本地通知&lt;/li&gt;
&lt;li&gt;推送通知&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里主要介绍广播通知 ==&amp;gt; NSNotificationCenter&lt;/p&gt;
&lt;h2 id=&quot;使用步骤-1&quot;&gt;&lt;a href=&quot;#使用步骤-1&quot; class=&quot;headerlink&quot; title=&quot;使用步骤&quot;&gt;&lt;/a&gt;使用步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建一个投送通知&lt;/p&gt;
&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)postNotificationName:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * _Nonnull)notificationName object:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; _Nullable)notificationSender userInfo:(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; * _Nullable)userInfo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; NSNotificationCenter是单例模式，创建和获得共享实例的方法是defaultCenter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;监听系统通知&lt;/p&gt;
&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)addObserver:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; _Nonnull)notificationObserver selector:(SEL _Nonnull)notificationSelector name:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * _Nullable)notificationName object:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; _Nullable)notificationSender&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 处理方法的实现&lt;/p&gt;
&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)xxxCompletion:(&lt;span class=&quot;built_in&quot;&gt;NSMotification&lt;/span&gt; *)notification &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *data = [notification userInfo];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *name = [data objectForKey:@“username”];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 最后解除注册&lt;/p&gt;
&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;removeObserver:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;值&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;notificationName&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;通知名称，一般命名为XxxxXxxxNotification&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;notificationSender&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;投送通知时传递过来的对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;userInfo&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;投送通知时定义的字典对象，用于传递数据&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;值&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;notificationObserver&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;谁监听&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;notificationSelector&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;处理方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;notificationName&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;通知名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;notificationSender&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;投送通知时传递过来的对象&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;Delegate&quot;&gt;&lt;a href=&quot;#Delegate&quot; class=&quot;headerlink&quot; title=&quot;Delegate&quot;&gt;&lt;/a&gt;Delegate&lt;/h1&gt;&lt;p&gt;作为最常见的苹果设计模式，在这里不再赘述他的使用方法。&lt;br&gt;实现Protocol，delegate = self，实现相应的代理方法即可。&lt;/p&gt;
&lt;h1 id=&quot;比较&quot;&gt;&lt;a href=&quot;#比较&quot; class=&quot;headerlink&quot; title=&quot;比较&quot;&gt;&lt;/a&gt;比较&lt;/h1&gt;&lt;h2 id=&quot;delegate-的-优势-：&quot;&gt;&lt;a href=&quot;#delegate-的-优势-：&quot; class=&quot;headerlink&quot; title=&quot;delegate 的 优势 ：&quot;&gt;&lt;/a&gt;delegate 的 优势 ：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;非常严格的语法。所有将听到的事件必须是在delegate协议中有清晰的定义。&lt;/li&gt;
&lt;li&gt;如果delegate中的一个方法没有实现那么就会出现编译警告/错误&lt;/li&gt;
&lt;li&gt;协议必须在controller的作用域范围内定义&lt;/li&gt;
&lt;li&gt;在一个应用中的控制流程是可跟踪的并且是可识别的；&lt;/li&gt;
&lt;li&gt;在一个控制器中可以定义定义多个不同的协议，每个协议有不同的delegates&lt;/li&gt;
&lt;li&gt;没有第三方对象要求保持/监视通信过程。&lt;/li&gt;
&lt;li&gt;能够接收调用的协议方法的返回值。这意味着delegate能够提供反馈信息给controller&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;缺点-：&quot;&gt;&lt;a href=&quot;#缺点-：&quot; class=&quot;headerlink&quot; title=&quot;缺点 ：&quot;&gt;&lt;/a&gt;缺点 ：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;需要定义很多代码：1.协议定义；2.controller的delegate属性；3.在delegate本身中实现delegate方法定义&lt;/li&gt;
&lt;li&gt;在释放代理对象时，需要小心的将delegate改为nil。一旦设定失败，那么调用释放对象的方法将会出现内存crash&lt;/li&gt;
&lt;li&gt;在一个controller中有多个delegate对象，并且delegate是遵守同一个协议，但还是很难告诉多个对象同一个事件，不过有可能。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;notification的-优势-：&quot;&gt;&lt;a href=&quot;#notification的-优势-：&quot; class=&quot;headerlink&quot; title=&quot;notification的 优势 ：&quot;&gt;&lt;/a&gt;notification的 优势 ：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;不需要编写多少代码，实现比较简单；&lt;/li&gt;
&lt;li&gt;对于一个发出的通知，多个对象能够做出反应，即1对多的方式实现简单&lt;/li&gt;
&lt;li&gt;controller能够传递context对象（dictionary），context对象携带了关于发送通知的自定义的信息&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;缺点-：-1&quot;&gt;&lt;a href=&quot;#缺点-：-1&quot; class=&quot;headerlink&quot; title=&quot;缺点 ：&quot;&gt;&lt;/a&gt;缺点 ：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;在编译期不会检查通知是否能够被观察者正确的处理； &lt;/li&gt;
&lt;li&gt;在释放注册的对象时，需要在通知中心取消注册；&lt;/li&gt;
&lt;li&gt;在调试的时候应用的工作以及控制过程难跟踪；&lt;/li&gt;
&lt;li&gt;需要第三方对喜爱那个来管理controller与观察者对象之间的联系；&lt;/li&gt;
&lt;li&gt;controller和观察者需要提前知道通知名称、UserInfodictionary keys。如果这些没有在工作区间定义，那么会出现不同步的情况；&lt;/li&gt;
&lt;li&gt;通知发出后，controller不能从观察者获得任何的反馈信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;KVO的-优势-：&quot;&gt;&lt;a href=&quot;#KVO的-优势-：&quot; class=&quot;headerlink&quot; title=&quot;KVO的 优势 ：&quot;&gt;&lt;/a&gt;KVO的 优势 ：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;能够提供一种简单的方法实现两个对象间的同步。例如：model和view之间同步；&lt;/li&gt;
&lt;li&gt;能够对非我们创建的对象，即内部对象的状态改变作出响应，而且不需要改变内部对象（SKD对象）的实现；&lt;/li&gt;
&lt;li&gt;能够提供观察的属性的最新值以及先前值；&lt;/li&gt;
&lt;li&gt;用key paths来观察属性，因此也可以观察嵌套对象；&lt;/li&gt;
&lt;li&gt;完成了对观察对象的抽象，因为不需要额外的代码来允许观察值能够被观察&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;缺点-：-2&quot;&gt;&lt;a href=&quot;#缺点-：-2&quot; class=&quot;headerlink&quot; title=&quot;缺点 ：&quot;&gt;&lt;/a&gt;缺点 ：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;我们观察的属性必须使用strings来定义。因此在编译器不会出现警告以及检查；&lt;/li&gt;
&lt;li&gt;对属性重构将导致我们的观察代码不再可用；&lt;/li&gt;
&lt;li&gt;复杂的“IF”语句要求对象正在观察多个值。这是因为所有的观察代码通过一个方法来指向；&lt;/li&gt;
&lt;li&gt;当释放观察者时不需要移除观察者。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h1&gt;&lt;p&gt;delegate比较友好，在使用方法时都是询问发起者，should i do? 所以有返回值&lt;br&gt;而KVO和NSNotification则显得比较霸道，发出通知，剩下的事情就不管了，所以没有返回值&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Samuel在学习完KeyValue机制后，对iOS的应用有了新的认识，在这里写下对KVC的一些看法，才疏学浅，文中难免有纰漏，希望各位大神指正。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;KVC&quot;&gt;&lt;a href=&quot;#KVC&quot; class=&quot;headerlink&quot; title=&quot;KVC&quot;&gt;&lt;/a&gt;KVC&lt;/h1&gt;&lt;p&gt;KVC指的是NSKeyValueCoding，是NSObject的一个Category，可以不通过调用accessor对实例变量进行读取NSObject(NSKeyValueCoding)的方法有三类: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;getting values&lt;/li&gt;
&lt;li&gt;setting values&lt;/li&gt;
&lt;li&gt;validation
    
    </summary>
    
      <category term="Objective-C" scheme="http://poino.cn/categories/Objective-C/"/>
    
    
      <category term="iOS" scheme="http://poino.cn/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>GCD简易教程</title>
    <link href="http://poino.cn/2016/03/23/GCD%E7%AE%80%E6%98%93%E6%95%99%E7%A8%8B/"/>
    <id>http://poino.cn/2016/03/23/GCD简易教程/</id>
    <published>2016-03-22T16:00:00.000Z</published>
    <updated>2016-03-31T13:53:12.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;转载自苹果核@尛破孩-波波，原文请点击&lt;a href=&quot;http://pingguohe.net/2016/03/07/GCD-is-so-easy.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;相信读者已经看过很多大神们对GCD深入浅出的分析，这也是老生常谈的一个多线程的实现方式了，所以我也就不再啰嗦其理论。但是到底有多少方法是我们日常编程中常用的？又有多少是你不知道的？今天，我就来例举一些GCD的方法，绝对让你看一眼就会正确得使用。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;与其说CGD是线程管理，不如说是队列管理，那么我们先来介绍一下GCD中常用的队列：&quot;&gt;&lt;a href=&quot;#与其说CGD是线程管理，不如说是队列管理，那么我们先来介绍一下GCD中常用的队列：&quot; class=&quot;headerlink&quot; title=&quot;与其说CGD是线程管理，不如说是队列管理，那么我们先来介绍一下GCD中常用的队列：&quot;&gt;&lt;/a&gt;与其说CGD是线程管理，不如说是队列管理，那么我们先来介绍一下GCD中常用的队列：&lt;/h1&gt;&lt;h2 id=&quot;Serial-Diapatch-Queue-串行队列&quot;&gt;&lt;a href=&quot;#Serial-Diapatch-Queue-串行队列&quot; class=&quot;headerlink&quot; title=&quot;Serial Diapatch Queue 串行队列&quot;&gt;&lt;/a&gt;Serial Diapatch Queue 串行队列&lt;/h2&gt;&lt;p&gt;当任务相互依赖，具有明显的先后顺序的时候，使用串行队列是一个不错的选择 创建一个串行队列：&lt;br&gt;&lt;code&gt;dispatch_queue_t serialDiapatchQueue=dispatch_queue_create(&amp;quot;com.test.queue&amp;quot;, DISPATCH_QUEUE_SERIAL);&lt;/code&gt;&lt;br&gt;第一个参数为队列名，第二个参数为队列类型，当然，第二个参数人如果写NULL，创建出来的也是一个串行队列。然后我们在异步线程来执行这个队列：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(serialDiapatchQueue, ^&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;1&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(serialDiapatchQueue, ^&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sleep(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;2&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(serialDiapatchQueue, ^&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;3&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;为了能更好的理解，我给每个异步线程都添加了一个log，看一下日志平台的log：&lt;br&gt;    &lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;13.907&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;2195&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;61497&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;15.911&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;2195&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;61497&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;16.912&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;2195&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;61497&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;没错，他在61497这个编号的线程中做了串行输出，相互彼此依赖，串行执行&lt;/p&gt;
&lt;h2 id=&quot;Concurrent-Diapatch-Queue-并发队列&quot;&gt;&lt;a href=&quot;#Concurrent-Diapatch-Queue-并发队列&quot; class=&quot;headerlink&quot; title=&quot;Concurrent Diapatch Queue 并发队列&quot;&gt;&lt;/a&gt;Concurrent Diapatch Queue 并发队列&lt;/h2&gt;&lt;p&gt;与串行队列刚好相反，他不会存在任务间的相互依赖。&lt;br&gt;创建一个并发队列：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_queue_t&lt;/span&gt; concurrentDiapatchQueue=dispatch_queue_create(&lt;span class=&quot;string&quot;&gt;&quot;com.test.queue&quot;&lt;/span&gt;, DISPATCH_QUEUE_CONCURRENT);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;比较2个队列的创建，我们发现只有第二个参数从&lt;code&gt;DISPATCH_QUEUE_SERIAL&lt;/code&gt;变成了对应的&lt;code&gt;DISPATCH_QUEUE_CONCURRENT&lt;/code&gt;，其他完全一样。&lt;br&gt;用同一段代码，换一种队列我们来比较一下效果：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(concurrentDiapatchQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(concurrentDiapatchQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sleep(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;2&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(concurrentDiapatchQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;3&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出的log：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;38.289&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;2260&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;72557&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;39.291&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;2260&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;72559&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;40.293&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;2260&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;72556&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们发现，log的输出在3个不同编号的线程中进行，而且相互不依赖，不阻塞。&lt;/p&gt;
&lt;h2 id=&quot;Global-Queue-amp-Main-Queue&quot;&gt;&lt;a href=&quot;#Global-Queue-amp-Main-Queue&quot; class=&quot;headerlink&quot; title=&quot;Global Queue &amp;amp; Main Queue&quot;&gt;&lt;/a&gt;Global Queue &amp;amp; Main Queue&lt;/h2&gt;&lt;p&gt;这是系统为我们准备的2个队列：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Global Queue其实就是系统创建的Concurrent Diapatch Queue&lt;/li&gt;
&lt;li&gt;Main Queue 其实就是系统创建的位于主线程的Serial Diapatch Queue&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通常情况我们会把这2个队列放在一起使用，也是我们最常用的开异步线程-执行异步任务-回主线程的一种方式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;异步线程&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;异步主线程&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过上面的代码我们发现了2个有意思的点：&lt;br&gt;&lt;code&gt;dispatch_get_global_queue&lt;/code&gt;存在优先级，没错，他一共有4个优先级：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;define DISPATCH_QUEUE_PRIORITY_HIGH 2&lt;/code&gt;&lt;br&gt;&lt;code&gt;define DISPATCH_QUEUE_PRIORITY_DEFAULT 0&lt;/code&gt;&lt;br&gt;&lt;code&gt;define DISPATCH_QUEUE_PRIORITY_LOW (-2)&lt;/code&gt;&lt;br&gt;&lt;code&gt;define DISPATCH_QUEUE_PRIORITY_BACKGROUND INT16\_MIN&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_BACKGROUND, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;4&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_LOW, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;3&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;2&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_HIGH, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在指定优先级之后，同一个队列会按照这个优先级执行，打印的顺序为1、2、3、4，当然这不是串行队列，所以不存在绝对回调先后。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;异步主线程&lt;/li&gt;
&lt;li&gt;在日常工作中，除了在其他线程返回主线程的时候需要用这个方法，还有一些时候我们在主线程中直接调用异步主线程，这是利用&lt;code&gt;dispatch_async&lt;/code&gt;的特性：block中的任务会放在主线程本次runloop之后返回。这样，有些存在先后顺序的问题就可以得到解决了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;说完了队列，我们再说说GCD提供的一些操作队列的方法&quot;&gt;&lt;a href=&quot;#说完了队列，我们再说说GCD提供的一些操作队列的方法&quot; class=&quot;headerlink&quot; title=&quot;说完了队列，我们再说说GCD提供的一些操作队列的方法&quot;&gt;&lt;/a&gt;说完了队列，我们再说说GCD提供的一些操作队列的方法&lt;/h2&gt;&lt;h3 id=&quot;dispatch-set-target-queue&quot;&gt;&lt;a href=&quot;#dispatch-set-target-queue&quot; class=&quot;headerlink&quot; title=&quot;dispatch_set_target_queue&quot;&gt;&lt;/a&gt;dispatch_set_target_queue&lt;/h3&gt;&lt;p&gt;刚刚我们说了系统的Global Queue是可以指定优先级的，那我们如何给自己创建的队列执行优先级呢？这里我们就可以用到&lt;code&gt;dispatch_set_target_queue&lt;/code&gt;这个方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_queue_t&lt;/span&gt; serialDiapatchQueue=dispatch_queue_create(&lt;span class=&quot;string&quot;&gt;&quot;com.test.queue&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_queue_t&lt;/span&gt; dispatchgetglobalqueue=dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_LOW, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_set_target_queue(serialDiapatchQueue, dispatchgetglobalqueue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(serialDiapatchQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;我优先级低，先让让&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;我优先级高,我先block&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我把自己创建的队列塞到了系统提供的&lt;code&gt;global_queue&lt;/code&gt;队列中，我们可以理解为：我们自己创建的queue其实是位于&lt;code&gt;global_queue&lt;/code&gt;中执行,所以改变&lt;code&gt;global_queue&lt;/code&gt;的优先级，也就改变了我们自己所创建的queue的优先级。所以我们常用这种方式来管理子队列。&lt;/p&gt;
&lt;h3 id=&quot;dispatch-after&quot;&gt;&lt;a href=&quot;#dispatch-after&quot; class=&quot;headerlink&quot; title=&quot;dispatch_after&quot;&gt;&lt;/a&gt;dispatch_after&lt;/h3&gt;&lt;p&gt;这个是最常用的，用来延迟执行的GCD方法，因为在主线程中我们不能用sleep来延迟方法的调用，所以用它是最合适的，我们做一个简单的例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;小破孩-波波1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; delayInSeconds = &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(delayInSeconds * &lt;span class=&quot;built_in&quot;&gt;NSEC_PER_SEC&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_after(popTime, dispatch_get_main_queue(), ^(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;小破孩-波波2&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出的结果：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;06.019&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;2443&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;95722&lt;/span&gt;] 小破孩-波波&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;08.019&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;2443&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;95722&lt;/span&gt;] 小破孩-波波&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们看到他就是在主线程，就是刚好延迟了2秒，当然，我说这个2秒并不是绝对的，为什么这么说？还记得我之前在介绍&lt;code&gt;dispatch_async&lt;/code&gt;这个特性的时候提到的吗？他的block中方法的执行会放在主线程runloop之后，所以，如果此时runloop周期较长的时候，可能会有一些时差产生。&lt;/p&gt;
&lt;h3 id=&quot;dispatch-group&quot;&gt;&lt;a href=&quot;#dispatch-group&quot; class=&quot;headerlink&quot; title=&quot;dispatch_group&quot;&gt;&lt;/a&gt;dispatch_group&lt;/h3&gt;&lt;p&gt;当我们需要监听一个并发队列中，所有任务都完成了，就可以用到这个group，因为并发队列你并不知道哪一个是最后执行的，所以以单独一个任务是无法监听到这个点的，如果把这些单任务都放到同一个group，那么，我们就能通过&lt;code&gt;dispatch_group_notify&lt;/code&gt;方法知道什么时候这些任务全部执行完成了。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_queue_t&lt;/span&gt; queue=dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_t group=dispatch_group_create();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_async(group, queue, ^&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;0&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_async(group, queue, ^&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;1&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_async(group, queue, ^&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;2&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_notify(group, dispatch_get_main_queue(), ^&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;down&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在例子中，我把3个log分别放在并发队列中，通过把这个并发队列任务统一加入group中，group每次runloop的时候都会调用一个方法&lt;code&gt;dispatch_group_wait(group, DISPATCH_TIME_NOW)&lt;/code&gt;，用来检查group中的任务是否已经完成，如果已经完成了，那么会执行&lt;code&gt;dispatch_group_notify的block&lt;/code&gt;，输出’down’看一下运行结果：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;58.647&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;9424&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;156388&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;58.647&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;9424&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;156382&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;58.647&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;9424&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;156385&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;58.650&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;9424&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;156324&lt;/span&gt;] down&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;dispatch-barrier-async&quot;&gt;&lt;a href=&quot;#dispatch-barrier-async&quot; class=&quot;headerlink&quot; title=&quot;dispatch_barrier_async&quot;&gt;&lt;/a&gt;dispatch_barrier_async&lt;/h3&gt;&lt;p&gt;此方法的作用是在并发队列中，完成在它之前提交到队列中的任务后打断，单独执行其block，并在执行完成之后才能继续执行在他之后提交到队列中的任务：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_queue_t&lt;/span&gt; concurrentDiapatchQueue=dispatch_queue_create(&lt;span class=&quot;string&quot;&gt;&quot;com.test.queue&quot;&lt;/span&gt;, DISPATCH_QUEUE_CONCURRENT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(concurrentDiapatchQueue, ^&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;0&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(concurrentDiapatchQueue, ^&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;1&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(concurrentDiapatchQueue, ^&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;2&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(concurrentDiapatchQueue, ^&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;3&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_barrier_async(concurrentDiapatchQueue, ^&amp;#123;sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;4&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(concurrentDiapatchQueue, ^&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;5&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(concurrentDiapatchQueue, ^&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;6&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(concurrentDiapatchQueue, ^&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;7&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(concurrentDiapatchQueue, ^&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;8&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出的结果为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;32.410&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;10079&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;169655&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;32.410&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;10079&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;169658&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;32.410&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;10079&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;169656&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;32.410&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;10079&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;169661&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;33.414&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;10079&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;169661&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;33.415&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;10079&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;169661&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;33.415&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;10079&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;169658&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;33.415&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;10079&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;169655&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;33.415&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;10079&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;169662&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;4之后的任务在我线程sleep之后才执行，这其实就起到了一个线程锁的作用，在多个线程同时操作一个对象的时候，读可以放在并发进行，当写的时候，我们就可以用dispatch_barrier_async方法，效果杠杠的。&lt;/p&gt;
&lt;h3 id=&quot;dispatch-sync&quot;&gt;&lt;a href=&quot;#dispatch-sync&quot; class=&quot;headerlink&quot; title=&quot;dispatch_sync&quot;&gt;&lt;/a&gt;dispatch_sync&lt;/h3&gt;&lt;p&gt;&lt;code&gt;dispatch_sync&lt;/code&gt; 会在当前线程执行队列，并且阻塞当前线程中之后运行的代码，所以，同步线程非常有可能导致死锁现象，我们这边就举一个死锁的例子，直接在主线调用以下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_sync&lt;/span&gt;(dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;有没有同步主线程?&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;根据FIFO（先进先出）的原则，block里面的代码应该在主线程此次runloop后执行，但是由于他是同步队列，所有他之后的代码会等待其执行完成后才能继续执行，2者相互等待，所以就出现了死锁。&lt;/p&gt;
&lt;p&gt;我们再举一个比较特殊的例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_queue_t&lt;/span&gt; queue=dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_sync&lt;/span&gt;(queue, ^&amp;#123;sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;1&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_sync&lt;/span&gt;(queue, ^&amp;#123;sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;2&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_sync&lt;/span&gt;(queue, ^&amp;#123;sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;3&quot;&lt;/span&gt;);&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;4&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其打印结果为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;48.124&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;14198&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;272683&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;49.125&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;14198&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;272683&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50.126&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;14198&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;272683&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50.126&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;14198&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;272683&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;从线程编号中我们发现，同步方法没有去开新的线程，而是在当前线程中执行队列，会有人问，上文说&lt;code&gt;dispatch_get_global_queue&lt;/code&gt;不是并发队列，并发队列不是应该会在开启多个线程吗？这个前提是用异步方法。GCD其实是弱化了线程的管理，强化了队列管理，这使我们理解变得比较形象。&lt;/p&gt;
&lt;h3 id=&quot;dispatch-apply&quot;&gt;&lt;a href=&quot;#dispatch-apply&quot; class=&quot;headerlink&quot; title=&quot;dispatch_apply&quot;&gt;&lt;/a&gt;dispatch_apply&lt;/h3&gt;&lt;p&gt;这个方法用于无序查找，在一个数组中，我们能开启多个线程来查找所需要的值，我这边也举个例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *array=[[&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; alloc]initWithObjects:&lt;span class=&quot;string&quot;&gt;@&quot;0&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;@&quot;1&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;@&quot;2&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;@&quot;3&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;@&quot;4&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;@&quot;5&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;@&quot;6&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_queue_t&lt;/span&gt; queue=dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_apply([array count], queue, ^(size_t index) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%zu=%@&quot;&lt;/span&gt;,index,[array objectAtIndex:index]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;阻塞&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出结果：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50.726&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;14318&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;291701&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50.726&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;14318&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;291705&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50.726&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;14318&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;291783&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50.726&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;14318&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;291782&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50.726&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;14318&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;291784&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50.726&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;14318&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;291627&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50.726&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;14318&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;291785&lt;/span&gt;] &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-03&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-07&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;36&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;50.727&lt;/span&gt; GCD[&lt;span class=&quot;number&quot;&gt;14318&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;291627&lt;/span&gt;] 阻塞&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过输出log，我们发现这个方法虽然会开启多个线程来遍历这个数组，但是在遍历完成之前会阻塞主线程。&lt;/p&gt;
&lt;h3 id=&quot;dispatch-suspend-amp-dispatch-resume&quot;&gt;&lt;a href=&quot;#dispatch-suspend-amp-dispatch-resume&quot; class=&quot;headerlink&quot; title=&quot;dispatch_suspend &amp;amp; dispatch_resume&quot;&gt;&lt;/a&gt;dispatch_suspend &amp;amp; dispatch_resume&lt;/h3&gt;&lt;p&gt;队列挂起和恢复，这个没什么好说的，直接上代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_queue_t&lt;/span&gt; concurrentDiapatchQueue=dispatch_queue_create(&lt;span class=&quot;string&quot;&gt;&quot;com.test.queue&quot;&lt;/span&gt;, DISPATCH_QUEUE_CONCURRENT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(concurrentDiapatchQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%i&quot;&lt;/span&gt;,i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i==&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;-----------------------------------&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dispatch_suspend(concurrentDiapatchQueue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sleep(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dispatch_resume(concurrentDiapatchQueue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们甚至可以在不同的线程对这个队列进行挂起和恢复，因为GCD是对队列的管理。&lt;/p&gt;
&lt;h3 id=&quot;Semaphore&quot;&gt;&lt;a href=&quot;#Semaphore&quot; class=&quot;headerlink&quot; title=&quot;Semaphore&quot;&gt;&lt;/a&gt;Semaphore&lt;/h3&gt;&lt;p&gt;我们可以通过设置信号量的大小，来解决并发过多导致资源吃紧的情况，以单核CPU做并发为例，一个CPU永远只能干一件事情，那如何同时处理多个事件呢，聪明的内核工程师让CPU干第一件事情，一定时间后停下来，存取进度，干第二件事情以此类推，所以如果开启非常多的线程，单核CPU会变得非常吃力，即使多核CPU，核心数也是有限的，所以合理分配线程，变得至关重要，那么如何发挥多核CPU的性能呢？如果让一个核心模拟传很多线程，经常干一半放下干另一件事情，那效率也会变低，所以我们要合理安排，将单一任务或者一组相关任务并发至全局队列中运算或者将多个不相关的任务或者关联不紧密的任务并发至用户队列中运算，所以用好信号量，合理分配CPU资源，程序也能得到优化，当日常使用中，信号量也许我们只起到了一个计数的作用，真的有点大材小用。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_semaphore_t semaphore = dispatch_semaphore_create(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//为了让一次输出10个，初始信号量为10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_queue_t&lt;/span&gt; queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);&lt;span class=&quot;comment&quot;&gt;//每进来1次，信号量-1;进来10次后就一直hold住，直到信号量大于0；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(queue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%i&quot;&lt;/span&gt;,i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sleep(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dispatch_semaphore_signal(semaphore);&lt;span class=&quot;comment&quot;&gt;//由于这里只是log,所以处理速度非常快，我就模拟2秒后信号量+1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;dispatch-once&quot;&gt;&lt;a href=&quot;#dispatch-once&quot; class=&quot;headerlink&quot; title=&quot;dispatch_once&quot;&gt;&lt;/a&gt;dispatch_once&lt;/h3&gt;&lt;p&gt;这个函数一般是用来做一个真的单例，也是非常常用的，在这里就举一个单例的例子吧：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight obj-c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; SingletonTimer * instance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;dispatch_once_t&lt;/span&gt; onceToken;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_once&lt;/span&gt;(&amp;amp;onceToken, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    instance = [[SingletonTimer alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; instance;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;好了，blog说了这么多关于GCD中的方法，大家是不是觉得这篇blog并没有什么高深的理论，本文更倾向于实用，看完这篇blog之后，大家一定对GCD跃跃欲试了吧！&lt;/p&gt;
&lt;p&gt;参考文献：《Objective-C高级编程 iOS与OS X多线程》&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转载自苹果核@尛破孩-波波，原文请点击&lt;a href=&quot;http://pingguohe.net/2016/03/07/GCD-is-so-easy.html&quot;&gt;这里&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;相信读者已经看过很多大神们对GCD深入浅出的分析，这也是老生常谈的一个多线程的实现方式了，所以我也就不再啰嗦其理论。但是到底有多少方法是我们日常编程中常用的？又有多少是你不知道的？今天，我就来例举一些GCD的方法，绝对让你看一眼就会正确得使用。&lt;br&gt;
    
    </summary>
    
      <category term="Objective-C" scheme="http://poino.cn/categories/Objective-C/"/>
    
    
      <category term="iOS" scheme="http://poino.cn/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>如何使用Shadowsocks优雅地上网</title>
    <link href="http://poino.cn/2016/03/21/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Shadowsocks%E4%BC%98%E9%9B%85%E5%9C%B0%E4%B8%8A%E7%BD%91/"/>
    <id>http://poino.cn/2016/03/21/如何使用Shadowsocks优雅地上网/</id>
    <published>2016-03-21T10:28:58.000Z</published>
    <updated>2016-03-21T10:46:31.000Z</updated>
    
    <content type="html">&lt;p&gt;算下来自己科学上网也有年头了，用过一些这类软件后发现，SS是唯一一款让我有物超所值感觉的好工具！@.@！通用版一年只要99软妹币！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;想要购买的同学点&lt;a href=&quot;https://portal.shadowsocks.com/aff.php?aff=3003&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;使用PC开启智能上网&quot;&gt;&lt;a href=&quot;#使用PC开启智能上网&quot; class=&quot;headerlink&quot; title=&quot;使用PC开启智能上网&quot;&gt;&lt;/a&gt;使用PC开启智能上网&lt;/h2&gt;&lt;p&gt;在官网成功订购后，下载最新版的Windows版的软件，&lt;a href=&quot;/assets/blogSource/Shadowsocks.exe&quot;&gt;下载链接&lt;/a&gt;。接下来就可以欢快的上网了！（2 Mar 2016, v3.0）&lt;br&gt;&lt;img src=&quot;/assets/blogImg/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Shadowsocks%E4%BC%98%E9%9B%85%E5%9C%B0%E4%B8%8A%E7%BD%91/tricks.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用iOS设备智能上网&quot;&gt;&lt;a href=&quot;#使用iOS设备智能上网&quot; class=&quot;headerlink&quot; title=&quot;使用iOS设备智能上网&quot;&gt;&lt;/a&gt;使用iOS设备智能上网&lt;/h2&gt;&lt;p&gt;应用商店搜索shadowsocks, 6元开启科学时代！（11 Mar 2016更新版本，之前的版本会存在5分钟后台运行被杀掉的问题，新版本直接走的系统VPN，安全卫生起效快！）&lt;/p&gt;
&lt;h2 id=&quot;使用安卓设备智能上网&quot;&gt;&lt;a href=&quot;#使用安卓设备智能上网&quot; class=&quot;headerlink&quot; title=&quot;使用安卓设备智能上网&quot;&gt;&lt;/a&gt;使用安卓设备智能上网&lt;/h2&gt;&lt;p&gt;这是维护的&lt;a href=&quot;https://github.com/shadowsocks/shadowsocks-android/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;，从我的云盘下载点&lt;a href=&quot;/assets/blogSource/shadowsocks-nightly-2.10.1.apk&quot;&gt;这里&lt;/a&gt;（18 Mar 2016, v2.10.1）&lt;/p&gt;
&lt;h2 id=&quot;使用Mac智能上网&quot;&gt;&lt;a href=&quot;#使用Mac智能上网&quot; class=&quot;headerlink&quot; title=&quot;使用Mac智能上网&quot;&gt;&lt;/a&gt;使用Mac智能上网&lt;/h2&gt;&lt;p&gt;sf下载地址点&lt;a href=&quot;https://sourceforge.net/projects/shadowsocksgui/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;路由器无痛上网&quot;&gt;&lt;a href=&quot;#路由器无痛上网&quot; class=&quot;headerlink&quot; title=&quot;路由器无痛上网&quot;&gt;&lt;/a&gt;路由器无痛上网&lt;/h2&gt;&lt;p&gt;这个是最推荐的！这个是最推荐的！这个是最推荐的！重要的事情说三遍！！！&lt;br&gt;我用的极路由，登录后台后点击云插件&lt;br&gt;&lt;img src=&quot;/assets/blogImg/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Shadowsocks%E4%BC%98%E9%9B%85%E5%9C%B0%E4%B8%8A%E7%BD%91/1.jpg&quot; alt=&quot;云插件&quot; title=&quot;云插件&quot;&gt;&lt;br&gt;在路由器基本信息中&lt;br&gt;&lt;img src=&quot;/assets/blogImg/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Shadowsocks%E4%BC%98%E9%9B%85%E5%9C%B0%E4%B8%8A%E7%BD%91/2.jpg&quot; alt=&quot;路由器基本信息&quot; title=&quot;路由器基本信息&quot;&gt;&lt;br&gt;高级设置 —》 开通开发者模式&lt;br&gt;&lt;img src=&quot;/assets/blogImg/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Shadowsocks%E4%BC%98%E9%9B%85%E5%9C%B0%E4%B8%8A%E7%BD%91/3.jpg&quot; alt=&quot;高级设置开启开发者模式&quot; title=&quot;高级设置开启开发者模式&quot;&gt;&lt;br&gt;然后在Terminal中键入ssh root@192.168.199.1 -p 1022&lt;br&gt;windows用户可以下载putty，下载点&lt;a href=&quot;/assets/blogSource/putty.exe&quot;&gt;这里&lt;/a&gt;&lt;br&gt;ssh登录到路由器的系统&lt;br&gt;然后键入&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /tmp &amp;amp;&amp;amp; wget http://cdn.is26.com/file/hiwifi/shadow.sh &amp;amp;&amp;amp; sh shadow.sh &amp;amp;&amp;amp; rm shadow.sh`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后重启路由器，在高级设置中就能看到啦&lt;br&gt;&lt;img src=&quot;/assets/blogImg/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Shadowsocks%E4%BC%98%E9%9B%85%E5%9C%B0%E4%B8%8A%E7%BD%91/4.jpg&quot; alt=&quot;路由器&quot; title=&quot;路由器&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后再说一遍，想要购买的同学点&lt;a href=&quot;https://portal.shadowsocks.com/aff.php?aff=3003&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;！仅售99软妹币😂&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;算下来自己科学上网也有年头了，用过一些这类软件后发现，SS是唯一一款让我有物超所值感觉的好工具！@.@！通用版一年只要99软妹币！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;想要购买的同学点&lt;a href=&quot;https://portal.shadowsocks.com/aff.php?aff=3003&quot;&gt;这里&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="工具应用" scheme="http://poino.cn/categories/%E5%B7%A5%E5%85%B7%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="ss" scheme="http://poino.cn/tags/ss/"/>
    
  </entry>
  
  <entry>
    <title>AFNetworking</title>
    <link href="http://poino.cn/2016/03/20/AFNetworking/"/>
    <id>http://poino.cn/2016/03/20/AFNetworking/</id>
    <published>2016-03-20T11:00:34.000Z</published>
    <updated>2016-03-31T12:30:25.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;在iOS 9中 苹果将原http协议改成了https协议 使用 TLS1.2 SSL加密请求数据，所以我们不能直接请求http协议下的数据了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决办法也很简单，用编辑器打开工程文件下的Info.plist文件添加下面的代码就可以了&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSAppTransportSecurity&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSExceptionDomains&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;yourserver.com&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--Include to allow subdomains--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSIncludesSubdomains&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;true&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--Include to allow HTTP requests--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSTemporaryExceptionAllowsInsecureHTTPLoads&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;true&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--Include to specify minimum TLS version--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSTemporaryExceptionMinimumTLSVersion&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;TLSv1.1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;string&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The lazy option is:&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSAppTransportSecurity&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--Include to allow all connections (DANGER)--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;NSAllowsArbitraryLoads&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;true&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dict&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在iOS 9中 苹果将原http协议改成了https协议 使用 TLS1.2 SSL加密请求数据，所以我们不能直接请求http协议下的数据了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决办法也很简单，用编辑器打开工程文件下的Info.plist文件添加下面的代码就可以了&lt;/p&gt;
    
    </summary>
    
      <category term="Objective-C" scheme="http://poino.cn/categories/Objective-C/"/>
    
    
      <category term="iOS" scheme="http://poino.cn/tags/iOS/"/>
    
  </entry>
  
</feed>
